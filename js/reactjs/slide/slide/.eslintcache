[{"F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\index.js":"1","F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\App.js":"2","F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\reportWebVitals.js":"3","F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\SlideShow.js":"4"},{"size":543,"mtime":1608694348564,"results":"5","hashOfConfig":"6"},{"size":122,"mtime":1608690433291,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1199,"mtime":1608695435256,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"hplk41",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"13"},"F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\index.js",["21"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SlideShow from './SlideShow';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SlideShow />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["22","23"],"F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\App.js",[],"F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\reportWebVitals.js",[],"F:\\duong\\DuongDB2324.github.io\\js\\reactjs\\slide\\slide\\src\\SlideShow.js",["24","25","26","27","28"],"import React from 'react';\r\nimport './slide.css';\r\nclass SlideShow extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state={image:1};\r\n    }\r\n    auto=()=> {\r\n      this.timer=setInterval(() => {\r\n        this.setState({image:this.state.image==6?1:this.state.image+1})\r\n      }, 1500)\r\n    }\r\n    next=()=>{\r\n      this.setState({image:this.state.image==6?1:this.state.image+1})\r\n    }\r\n    back=()=>{\r\n      this.setState({image:this.state.image==1?6:this.state.image-1})\r\n    }\r\n    pause=()=>{\r\n      clearInterval(this.timer);\r\n     }\r\n    render(){\r\n      return(\r\n        <div className=\"slide\">\r\n          <img className=\"image\" src={\"img/slide\"+this.state.image+\".jpg\" } alt=\"image1\" />\r\n          <a className=\"icon-back\" onClick={this.back}><i className=\"fas fa-angle-left\"></i></a>\r\n          <a className=\"icon-next\" onClick={this.next}><i className=\"fas fa-angle-right\"></i></a>\r\n          <button className=\"button\" type=\"button\" onClick={this.auto}>AUTO</button>\r\n          <div class=\"pause\"><button className=\"button1\" type=\"button\" onClick= {this.pause}>PAUSE</button></div>\r\n        </div>\r\n      )\r\n    }\r\n      \r\n  }\r\n  export default SlideShow;",{"ruleId":"29","severity":1,"message":"30","line":4,"column":8,"nodeType":"31","messageId":"32","endLine":4,"endColumn":11},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":10,"column":46,"nodeType":"39","messageId":"40","endLine":10,"endColumn":48},{"ruleId":"37","severity":1,"message":"38","line":14,"column":44,"nodeType":"39","messageId":"40","endLine":14,"endColumn":46},{"ruleId":"37","severity":1,"message":"38","line":17,"column":44,"nodeType":"39","messageId":"40","endLine":17,"endColumn":46},{"ruleId":"41","severity":1,"message":"42","line":26,"column":11,"nodeType":"43","endLine":26,"endColumn":56},{"ruleId":"41","severity":1,"message":"42","line":27,"column":11,"nodeType":"43","endLine":27,"endColumn":56},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]